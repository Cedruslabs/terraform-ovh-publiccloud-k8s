#!/bin/bash -e

# Do not run if init has already been done
if [ -f /opt/k8s/init.done ]; then
   echo "init already done" >&1
   exit 0
fi

# Prepare etcdctl command
export ETCDCTL_API=3
ETCDCTL_COMMAND="/opt/etcd/bin/etcdctl --cacert /opt/etcd/certs/ca.pem --cert /opt/etcd/certs/cert.pem --key /opt/etcd/certs/cert-key.pem --endpoints $ETCD_ENDPOINTS "

# Acquire lock on kubeadm-init script if initializing a new master
# Otherwise, run the script without locking
echo "initializing the node"
if [ "$MASTER_MODE" -eq "1" ]
then
  $ETCDCTL_COMMAND lock k8s-lock /bin/bash /opt/kubeadm/kubeadm-init
else
  /bin/bash /opt/kubeadm/kubeadm-init
fi

# Untaint node if needed
if [ "$MASTER_MODE" -eq "1" -a "$WORKER_MODE" -eq "1" ]
then
  echo "untainting $(hostname) master node"
  /opt/k8s/bin/kubectl --kubeconfig=/etc/kubernetes/admin.conf taint nodes $(hostname) node-role.kubernetes.io/master-
fi

# Apply CNI manifests if master
if [ "$MASTER_MODE" -eq "1" ]
then
  /opt/k8s/bin/kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/cni/cni-rbac.yaml
  /opt/k8s/bin/kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/cni/cni-manifest.yaml
fi

touch /opt/k8s/init.done
